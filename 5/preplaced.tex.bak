
%\documentstyle[twocolumn,psfig,times]{article}
\documentstyle[graphicx,psfig,12pt]{article}
%\documentclass[onecolumn]{article}
%\usepackage{epsfig}
%\usepackage{rotating}

\newfont{\ttlfnt}{phvb at 18pt}
\newfont{\aufnt}{phvr at 12pt}
\newfont{\affaddr}{phvr at 10pt}
\newfont{\eaddfnt}{phvr at 12pt}

\thispagestyle{empty}

%for lp2 only: set dimensions of columns, gap between columns, and paragraph indent
\setlength{\textheight}{8.9in} \setlength{\columnsep}{1.25pc}

\setlength{\footheight}{0.0in} \setlength{\topmargin}{0.35in}
\setlength{\headheight}{-0.2in} \setlength{\headsep}{0.0in}
\setlength{\oddsidemargin}{0.38in} \setlength{\textwidth}{5.5in}
\setlength{\footskip}{0.9in}
%\setlength{\evensidemargin}{0.38in}
%\setlength{\leftmargin}{1cm}
%\setlength{\rightmargin}{1cm}
\setlength{\parindent}{1pc}


\makeatletter
% to get 11 point spacing for normalsize text, must set it to 9 points
\def\@normalsize{\@setsize\small{16pt}\xpt\@xpt
\abovedisplayskip 8pt plus 2pt minus 4pt\belowdisplayskip
\abovedisplayskip \abovedisplayshortskip \z@ plus
2pt\belowdisplayshortskip 4pt plus 2pt minus
2pt\let\@listi\@listI}

% need an 11 pt font size for subsection and abstract headings

\def\subsize{\@setsize\subsize{12pt}\xipt\@xipt}

% make section titles bold and 12pt, 2 blank lines before, 1 after
\def\section{\@startsection {section}{1}{\z@}{1.0ex plus 1ex minus
    .2ex}{.2ex plus .2ex}{\large\bf}}

% make subsection titles bold and 11pt, 1 blank line before, 1 after
\def\subsection{\@startsection{subsection}{2}{\z@}{2.5ex plus 1ex}
   {.2ex plus .2ex}{\subsize\bf}}

% make subsubsection, from old style
\def\subsubsection{\@startsection{subsubsection}{3}{\z@}{-1ex plus
 -.2ex minus -.1ex}{.25ex plus .05ex}{\small\bf}}

\def\thebibliography#1{\section*{References}\list
  {[\arabic{enumi}]}{\settowidth\labelwidth{[#1]}\leftmargin\labelwidth
 \advance\leftmargin\labelsep
 \usecounter{enumi}}
 \def\newblock{\hskip .08em plus .25em minus -.05em}
 \sloppy
 \sfcode`\.=1000\relax}
\let\endthebibliography=\endlist

\def\fnum@figure{Fig \thefigure}

\renewcommand\thefigure{\arabic{section}.\arabic{figure}}

\renewcommand\thetable{\arabic{section}-\arabic{table}}


\makeatother

\newtheorem{theorem}{Theorem}
\newtheorem{lemma}{Lemma}
\newtheorem{example}{Example}
\newtheorem{corollary}{Corollary}
\newtheorem{property}{Property}
\newenvironment{proof}
{\noindent \textit{\textbf{Proof:}}~ }     % begin proof
{\hfill\rule{2mm}{2mm} \vspace{\parskip} } % end proof


\setcounter{page}{1}






\begin{document}

\title{UFO: Unified Convex Optimization Algorithms for
Fixed-Outline Floorplanning with Pre-placed Constraint}

%\author{Jai-Ming Lin, Hsin-Lung Chen, and Yao-Wen Chang, {\it Member}, {\it IEEE}
%       \thanks{Manuscript received Sep 25, 2001; revised Jan 24, 2002.
%               This thesis was recommended by
%               Editor-in-Chief Eby Friedman.}
%       \thanks{This work was partially supported by the National
%               Science Council of Taiwan ROC under Grant
%               No.~NSC-89-2215-E-009-117.}
%       \thanks{Jai-Ming Lin and Hsin-Lung Chen are with
%               the Department of Computer and Information Science,
%               National Chiao Tung University, Hsinchu 300, Taiwan.
%               E-mail: \{gis87808, is85019\}@cis.nctu.edu.tw.}
%       \thanks{Yao-Wen Chang is with the Graduate
%               Institute of Electronics Engineering \& the Department of Electrical Engineering,
%               National Taiwan University, Taipei 106, Taiwan.
%               E-mail: ywchang@cc.ee.ntu.edu.tw.}
%       }



\vspace{30mm}
\author{\large Student: Hsi Hung \hspace{1.5cm}   Advisor: Jai-Ming Lin\\
        %\normalsize \{gis87808, ywchang\}@cis.nctu.edu.tw\\
        \normalsize Department of Electrical Engineering,\\
        \normalsize National Cheng Kung University, Tainan, Taiwan
       }

\date{}
\maketitle

\thispagestyle{empty} %\small

\baselineskip=26pt

\begin{abstract}
\baselineskip=26pt

    Fixed-outline floorplanning has attracted more
    attention for the real requirement in current IC design flow.
    In addition, there may exist several pre-placed
    modules in the specified region.  In order to get a feasible foorplan, a floorplanner should have the ability to consider
    these constraints, which makes foorplanning a more difficult problem. In this thesis, we propose a {\it
    first}
    work to consider pre-placed modules in a fixed-outline floorplan. Two-stages unified convex optimization methods,
    called {\bf UFO}, are used in a global distribution and a local legalization stages, respectively.
    In the first stage, a {\bf pull-push} model is used to distribute modules over a fixed outline under the wirelength consideration.
    In the second stage, the geometrical relations between modules are extracted by applying the Delaunay triangulation method on the result of the first stage.
    Then, a quadratic function as well as the constraint graphs are used to determine the locations and shapes of
    modules so that no module overlaps and all modules are in the outline.
    Experimental results have demonstrated that UFO clearly outperforms the results reported in the
    literature on the GSRC benchmarks.

\end{abstract}

\thispagestyle{empty}
\newpage

\setcounter{secnumdepth}{10}
\tableofcontents    % Table of Contents will be automatically

\newpage

\listoffigures       % List of Tables and List of Figures will be placed
\newpage

\listoftables      % here, if applicable.
\newpage

\section{Introduction}
\label{sec:intro}
\thispagestyle{empty}

As nanometer IC technology advances, one single chip can contain
more than millions of transistors in a modern design. To cope with
the increasing design complexity, IP modules are widely used for
large-scale designs and hierarchical design has become an
essential design technique in the real flow. These make
floorplanning/placement problems attract more attention than ever.

Although many studies on floorplanning have been proposed, there
exists a gap between the real problem concerned in the industry
and the research aspect. Traditional researches focus on
allocating modules to optimize its area and timing without
restricting the resulting shape of a floorplan. These methods
usually used representations~\cite{Chang00, Guo99, Hong00, Lin01,
Murata95, Nakatake96, Otten82, Wong86, Zhou04} with simulated
annealing to handle the problem. However, foorplanning is usually
carried out after the die size and the package have been
determined in most of design flow, which makes it quite
impractical without considering the die area. Therefore,
Kahng~\cite{Kahng00} pointed out the insufficiency of the
classical floorplanning problem and proposed a formulation that is
more consistent with the real needs. In his formulation, the
following elements should be considered: (1) The bounding
rectangle of a floorplanning/placement region is fixed. (2) The
shapes of modules should not be restricted to rectangles,
L-shapes, and T-shapes. (3) Blocks with aspect ratios close to 1
are desirable.

In addition to the requirements proposed by Kahng~\cite{Kahng00},
a placement region usually contains some full custom designs such
as analog or RF modules placed in the boundary for the following
reasons: (1) these modules contain their own pads and the
locations of all pads in a chip should be assigned first so that
the bonding rules can be checked. (2) designers hope to place some
modules close to each other for timing or power considerations.
Therefore, it is necessary to consider these pre-placed modules in
the fixed-outline. What makes the problem more complex is that the
shapes of pre-placed modules may not be rectangular. It is
inevitable to waste area if constructed modules' shapes are
rectangular. Therefore, to get a feasible floorplan, a
floorplanner should have ability to construct modules with
arbitrary shapes so that they can fit into an available area with
arbitrary contours.

Figure~\ref{fig::ex1}(a) shows five modules that need to be placed
into a given region in its right side. The rectangles around the
boundary are I/O pads. Two full custom modules Analog1 and Analog2
have been placed inside the region since they contain their own
pads and pads should be assigned first. Note that Analog1 is
L-shape module.  Figure~\ref{fig::ex1}(b) shows that it is
impossible to place all modules into the remaining region if the
shapes of modules are rectangular even the placement area is big
enough to contain these modules. To get a feasible floorplan in a
fixed-outline with pre-placed modules, we need to construct
modules with rectilinear shapes. Figure~\ref{fig::ex1}(c) shows a
feasible floorplan for all the modules.



\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/ex1.eps,width=12cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     A fixed-outline floorplanning with pre-placed modules.
     (a) A set of modules in the left side that is going to be placed into the fixed-outline in the right
     side. There exist two pre-placed modules in the boundary.
     (b) Illegal floorplan if modules are rectangular.
     (c) Feasible floorplan if rectilinear modules are allowable.
   }
  \label{fig::ex1}
\end{figure}


\subsection{Previous Work}
\label{subsection::previous work}

During past few years, many studies focusing on solving fixed-die
floorplanning have been proposed. Most works handled this problem
using Simulated Annealing (SA) algorithm with various
representations~\cite{Adya03, Chen05, Chen06, Chen07}. Adya and
Markov~\cite{Adya03} used sequence pair to represent the topology
of a floorplan. In order to speed up the converge, they moved
modules based on slack computation. The fixed-outline constraint
can be satisfied by using a better local search method. Chen et
al.~\cite{Chen05} developed an interconnect-driven multilevel
floorplanning, call IMF, for the problem. IMF adopted two stages
approach, top-down partitioning followed by bottom-up merging. In
the first phase, a netlist and a placement region are recursively
partitioned by using the min-cut algorithm under wirelength
consideration. In the second stage, a B*-tree based floorplanner
is applied to respective fixed-outlined region and then each two
neighboring regions are merged to generate a new region. Recently,
Chen and Chang~\cite{Chen06} proposed an adaptive fast simmulated
annealing scheme based on B*-tree representation. Fixed-die
floorplanning can be achieved by taking the outline constraint
into its cost of the objective function. Yan and Chu~\cite{Yan08}
presented a fixed-outline floorplanning algorithm, named DeFer,
based on a slicing tree for a non-slicing floorplan. Based on the
principle of Deferred Decision Making (DDM), one slicing tree
actually corresponds to a huge number of slicing floorplan
solutions and are recorded in one single shape curve. Therefore,
it is straightforward to choose a good floorplan fitting into the
fixed outline by final shape curve.

%\begin{figure}[htb]
%  \centering
%  \centerline{\psfig{figure=figure/sa_slice.eps,width=15cm}}
%     \vspace{-2mm}
%  \caption{
%     \footnotesize
%     (a) Solutions from SA.
%     (b) The slicing tree of the representation:
%     $deV_1acbH_1V_2H_1$.
%     (c) Slicing floorplan.
%     By perturbing the representation, a global solution could be
%     found out with SA algorithm.
%   }
%  \label{fig::sa}
%\end{figure}

Some used mathematical approach for the problem.  Moh et
al.~\cite{Moh96} formulated the floorplanning problem as a
geometric program and then transformed it into a convex
optimization problem. Floorplanning with zero-deadspace ability is
accomplished by SA. Recently, Zhan et al.~\cite{Zhan06} proposed
an analytical approach for fixed-outline floorplanning with soft
blocks. They applied two stages for the problem. In the first
phase, the wirelength and the distribution density of modules are
minimized. Then, the overlap problem is optimized in the second
phase to achieve an overlap-free floorplan. Recently, Luo et
al.~\cite{Luo08} proposed a two-stage convex optimization method
for the problem.

In their method, relative positions of modules are first
determined using an {\it attractor-repeller (AR)} convex
optimization model, which can minimize the total wirelength and
reduce overlap area in the same time.

In the second stage, the actual locations and shapes of modules
are determined using Second-Order Cone Programming (SOCP)
formulation, which minimizes wirelength and facilitates
deadspace-free and overlap-free floorplans. However, since the AR
model cannot distribute module to the placement region uniformly,
the relative positions after SOCP may be completely different from
that after the first stage. Also, the aspect ratios of modules may
be violated in the results.


Other approaches include a partition based methods, search
algorithm, or graph based algorithm. Capo~\cite{Adya04} developed
a floorplacer that effectively combines min-cut placement with SA
algorithm to form a fixed-outline floorplanner. At the procedure
of partitioning and placement, fixed-outline floorplanning is
completed while taking routability into account. Lin et
al.~\cite{Lin04} tried some new methods, evolutionary search. Feng
et al.~\cite{Feng03} used a max-flow network forumation to solve
the problem. Recently, Ou He et al.~\cite{He08} proposed a novel
fixed-outline Floorplanner, named SAFFOA. They built and solved a
group of four quadratic equations in four variables iteratively,
and facilitated its integration with simulated annealing with a
topological representation called Ordered Quadtree.

\subsection{Our Contribution}
\label{subsection::contribution}

We propose in this thesis unified convex algorithms for
fixed-outline floorplanning with the {\bf pre-placed constraint},
called {\bf UFO}. Two algorithms are separately used to in global
distribution stage and local legalization stage, respectively. To
the best of our knowledge, this is the {\bf first} work
considering pre-placed modules in the fixed-outlined
floorplanning.
%There may exist several pre-placed modules in the
%real design. A practical floorplanner must have the ability to
%handle these issues.
Since the coordinates of pre-placed modules cannot be fixed during
perturbation, representation based approach is not easy to deal
with the problem. They can only move these modules to the
specified locations during packing, which is very complex and may
deteriorate wirelength in the optimized results. Unlike these
methods, our analytical based approach can handle pre-placed
modules easily by fixing the coordinates of these modules in the
beginning and then legalize modules around the pre-placed ones.
Therefore, we can obtain a consistent result when pre-placed
modules are considered.

In the floorplanning/placement, distributing modules among a
placement region and minimizing total wirelength are two
conflicting objectives, which is very difficult to balance. To
compromise these two factors, we first propose a {\bf Pull-Push }
({\bf PP } for short) model to spread modules to the placement
region under wirelength consideration. The ideal is to pull two
modules to closer locations to minimize wirelength if two modules
have larger number of interconnection. However, when the overlap
of any two modules increases, an additional penalty increases to
push these modules away from each other. The idea is similar to
the AR model proposed by Luo et al.~\cite{Luo08}. Unlike it, our
model does not have the following two disadvantages:
\begin{enumerate}

\item Once two modules overlap, the penalty used to spread them
away becomes a constant value.

\item The results are highly dependent on the parameters.

\end{enumerate}

Problem 1 will make the overlap become even more worse since the
penalty becomes a constant value after two modules overlap.
Therefore, the two modules may be placed even closer in order to
minimize the wirelength. For the problem 2, the parameter has
great impacts on the results. Our {\bf PP} model is parameter
independent and can get stable results for all benchmarks. The
experimental results show that our model can actually distribute
modules in the placement region, which is very important for the
fixed-outline floorplanning especially when the floorplan has zero
dead space. Since greater overlaps would make legalization
difficult, the relative positions between modules should be
changed dramatically for the fixed-outline. Even the modules can
be placed into outline, they may have bad aspect ratios for
unbalanced distribution.

After the first stage, there still exist some overlaps between
modules. In the second stage, we need to determine the locations
and shapes of modules in order to completely eliminate overlaps
and constrain modules into an outline. To maintain the good
results of the first stage, we first extract the geometrical
relations between modules by applying the Delaunay Triangulation
method on it. Then, the other convex optimization function as well
as the constraint graphs are formulated to legalize a floorplan,
named {\bf QOPL}. The object aims to meet the fixed outline
constraint, and the constraints are used to avoid overlaps between
modules. Comparing to SOCP that needs to minimize wirelength by
Luo et al.~\cite{Luo08}, QOPL doesn't need to consider wirelength
since the global distribution stage can get good results in
wirelength. {\bf Note this flow can be applied to any initial
floorplan to obtain a more compact floorplan alone.}

To summarize, {\bf UFO} has the following properties:
\begin{enumerate}
\item It is an analytical based algorithm that can uniformly
distribute modules to a region and optimize wirelength in the same
way.

\item It can easily handle pre-placed modules with arbitrarily
shapes.

\item It proposes a fixed-outline floorplanning engine which can
be applied to any floorplan to obtain a more compact floorplan.

\item It can generate rectilinear modules.

%\item Extend to 3D floorplanning.

\end{enumerate}

%Experimental results show the
%promise of UFO. For timing optimization, UFO obtained average
%improvements of 3.56 compared to that in~\cite{Luo08}.

The remainder of this thesis is organized as follows.
Section~\ref{sec:problem} formulates the fixed-outline
floorplanning/placement design problem. Section~\ref{sec:convext}
presents the first convex optimization algorithm to distribute
modules over a fixed-outline. Section~\ref{section::COP}
introduces the other convex optimization algorithm to determine
the shapes and locations of modules to eliminate overlaps in the
fixed-outline. Section~\ref{sec:PPM} presents {\bf UFO} flow for
pre-placed modules. Experimental results are reported in
Section~\ref{sec:results}. Finally, we conclude our work and
discuss future research directions in
Section~\ref{sec:conclusion}.

%\begin{figure}[htb]
%  \centering
%  \centerline{\psfig{figure=overallflow.eps,width=5.5cm}}
%     \vspace{-2mm}
%  \caption{
%     \footnotesize
%     {\bf UFO Process Design Flow}.
%   }
%  \label{fig::overallflow}
%\end{figure}

\thispagestyle{empty}
\newpage

\setcounter{figure}{0}
\section{Problem Formulation}
\label{sec:problem}

Given a die whose height and width are fixed and are denoted by
$H_f$ and $W_f$, respectively. Let $M = \{m_{1},m_{2},...,m_{n}
\}$ be a set of $n$ modules whose width, height, and area are
denoted by $w_{i}$, $h_{i}$ and $A_{i}$, $1 \leq i \leq n$. A
module has variable width and height and the aspect ratio of a
module $m_i$ is defined by $w_i/h_i$. The acceptable aspect ratios
are contrained in the range [$L_i,U_i]$. Some of the modules in
$B$ are already placed in the die and their shapes are fixed.
Thus, the {\bf fixed-outline floorplanning with the pre-placed
constraint} is to place those unplaced modules in the given die
area and determine their shapes such that no two modules overlap
and total wirelength can be minimized(As shown in
Figure~\ref{fig::problem}). The result has a great impact on the
cost, performance, and reliability for the state-of-the-art
circuits with large scale designed. However, handling
floorplanning with these constraints is significantly more
difficult than those without considering it.

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/problem.eps,width=15cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     (a) Three modules $m_1$, $m_2$ and $m_3$ intended to be placed in
      a die whose width and height are $H_f$ and $W_f$ with two pre-placed
     modules $B_1$ and $B_2$.
     (b) The curve for the shape of $m_i$  (the aspect ratios are between $L_i$ and
     $U_i$).
   }
  \label{fig::problem}
\end{figure}

\newpage

\setcounter{figure}{0}
\section{Global Distribution Stage}
\label{sec:convext} In this section, we'll give a convex
optimization model to spread modules among a fixed-outline under
wirelength consideration. Before that, we'll first review the AR
model proposed by Luo et al.~\cite{Luo08}, and then show the
deficiency of the AR model in the first subsection.

\subsection{Review of Attractor-Repeller (AR) Model}
\label{subsection::AR Model}

In the attractor-repeller model, each module $m_i$ is represented
by a circle $C_i$ with radius $r_{i}$, which is proportional to
$\sqrt A_i$. Let $c_{ij}$ denote the connectivity between modules
$m_i$ and $m_j$. Let $D_{ij}$ denote the square distance between
the centers of the corresponding circles (i.e., $D_{ij} = {(X_{i}
- X_{j})}^2 + {(Y_{i} - Y_{j})}^2$, where $(X_i, Y_i)$ and $(X_j,
Y_j$) are the coordinates of centers for $C_i$ and $C_j$).
Function~\ref{eq::ar} shows the AR model for two circles $C_i$ and
$C_j$, which consists of two equations. The first equation is
composed of two terms. Since two circles with a number of
connection should be placed closer so that the related wirelength
can be minimized, the first equation includes the term
$c_{ij}D_{ij}$ which can be considered as the attractor force.
However, it would cause a large overlap if there exists no
repeller force. Thus, the other term $t_{ij}/D_{ij} - 1$ is
included for such purpose, where $t_{ij} = \sigma \times
{(r_{i}+r_{j})}^2$.  $\sigma
> 0$ is a user specified parameter which represents the degree that two circles can overlap.
In order to push two circles away when they overlap, the sign of
the term would become minus when ${t_{ij}} < {D_{ij}}$. Since they
would like the cost become a constant value if $D_{ij} < T_{ij}$,
the function consists of the other equation as
$2\sqrt{c_{ij}t_{ij}} - 1$. The complete piecewise function
$f_{ij}$ is formulated as follows:

\begin{equation}
f_{ij}(X_{i},X_{j},Y_{i},Y_{j}) = \left\{
\begin{array}{rr}
c_{ij}D_{ij} + \frac{t_{ij}}{D_{ij}} - 1 \qquad, D_{ij}\geq T_{ij} \\
2\sqrt{c_{ij}t_{ij}} - 1                 \qquad,0 \leq
D_{ij}<T_{ij}
\end{array} \right.
\label{eq::ar}
\end{equation}
, where $T_{ij} := \sqrt{\frac{t_{ij}}{c_{ij}+ \varepsilon}}$ and
$\varepsilon > 0$ is a sufficiently small number.
%The function consists of two functions since the first function
%would be divergent when $D_{ij} < T_{ij}$.

%The first problem of AR model is that its results are affected by
%the user specified parameter. In the first equation of AR model,
%the scalar of the term $c_{ij}D_{ij}$ is significantly larger than
%the term $t_{ij}/D_{ij} - 1$, which means that an attractor force
%dominates a repeller force. Therefore, they need to multiply a
%suitable value to the second term to facilitate the function.

According to the second equation, we knows that the cost becomes a
constant value once two circles overlap, which may lead a large
overlap of circles. And the minimum value may occur when the two
circles are placed at very close locations (recall the result
shown in Fig.~\ref{fig::converge}(c)). To illustrate the
phenomena, we simplify the first function of AR model as
$f(z)=cz+\frac{(b-z)}{z}$, where $z$ denotes $D_{ij}$, $c$ denotes
$c_{ij}$,  and $b$ denotes $(r_{i}+r_{j})$. That is
    \begin{equation}
     f(z)= cz + \frac{(b-z)}{z} = cz + bz^{-1} -1
    \end{equation}
To compute the minimum value of the function, we first derive the
first derivative of $f(z)$ in the following:
    \begin{equation}
     f'(z)= c - bz^{-2} = 0 \Rightarrow z = \pm \sqrt{\frac{b}{c}}
    \end{equation}
$z$ denotes the minimum value of the function. For example,
suppose $r_{i}=30$, $r_{j}=20$, and $c_{ij}=3$,  the minimum value
of z is 4.0825 by the above equation. It means the actual distance
between two circle is 2.0205. In such condition, the two circles
should overlap seriously, and the corresponding curve is shown in
Figure~\ref{fig::curve}(a). To demonstrate the phenomena, we also
show the resulting distribution of circles in
Figure~\ref{fig::converge} by performing the experiments which
were taken on a circuit n10 from GSRC benchmark.
Figure~\ref{fig::converge}(a) is the distribution of circles using
original function in the above. Note that all circle overlap
completely in the figure. By multiplying different values
$10^3$,$10^5$,$10^7$ to the second term, the distribution of
circles are shown in Figure~\ref{fig::converge}(b)-(d),
respectively. Fig.~\ref{fig::converge}(b) shows that there still
exists a larger overlap when the multiplied value is small. On the
contrary, the circles are placed at the boundary when the value is
too large as shown in Fig.~\ref{fig::converge}(d). Although the
distribution of modules in Fig.~\ref{fig::converge}(c) is uniform,
there exist a complete overlap of two circles in the graph.


\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/converge.eps,width=11cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     The distribution of circles using AR model with different values multiplied to its second term. (a) $10$ (b) $10^3$ (c) $10^5$ and (d) $10^7$.
   }
  \label{fig::converge}
\end{figure}

In order to complement the situation, they proposed the complete
function of the AR model as follows:
\begin{equation}
\min_{X_{i},Y_{i},X_j, Y_j} \sum_{1\leq i< j \leq n}
f_{ij}(X_{i},X_{j},Y_{i},Y_{j}) - K\ln (\frac{D_{ij}}{T_{ij}})
\end{equation}
, where $K$ is a user specified parameter and can be set
empirically. The term $-K\ln (\frac{D_{ij}}{T_{ij}})$ is used to
increase the repeller force. However, even with the modification,
the function still cannot perfectly spread circles since the
results highly dependent on how well the parameter $K$ is set.


\subsection{Pull-Push Model}
\label{subsec:moarm}

We have pointed out the drawback of the AR model in the previous
subsection. Now, we would like to introduce our {\bf Pull-Push}
model ({\bf PP} model for short).

Before introducing our model, we first give necessary notations as
follows:
\begin{itemize}
 \item $s_{ij}=(r_{i}^2 \times
r_{j}^2)$. \item $d_{ij}=  \sqrt{{(X_{i} - X_{j})}^2 + {(Y_{i} -
Y_{j})}^2 }$ (i.e., it denotes the actual distance between the
centers of circles $C_i$ and $C_j$ ). \item
$p_{ij}=(r_{i}+r_{j})-d_{ij}$.
\end{itemize}

Function~\ref{eq:pp} shows our {\bf PP} model for two circles
$C_i$ and $C_j$, which also contains two equations as follows:
\begin{equation}
\label{PP_model}
 f_{ij}(X_{i},X_{j},Y_{i},Y_{j}) := \left\{
\begin{array}{rr}
c_{ij}d_{ij} + s_{ij} \times \frac{p_{ij}}{d_{ij}} \qquad, p_{ij}\geq 0\\
c_{ij}d_{ij} + 1 \times \frac{p_{ij}}{d_{ij}}      \qquad, p_{ij}<
0
\end{array} \right.
\label{eq:pp}
\end{equation}
Instead of using $D_{ij}$, we use $d_{ij}$ to represent the actual
distance of two circles. Unlike the conditions in AR model, the
two equations respectively represent the conditions that two
circles overlap(($p_{ij}\geq 0$)) and two circles do not overlap
($p_{ij} <0$). The minimum value of the above equation happens
when two circles just connect at one point, that is $d_{ij} = r_i
+ r_j$ (i.e., $p_{ij} = 0)$. {\bf PP} model wants to give a larger
force to push circles away if they overlap. However, once they are
separate, the repeller force should be reduced gradually so that
the two circles do not be pushed away anymore. Therefore, the
force should be limited to a smaller range no matter how far two
circles are separate.

We use Figure~\ref{fig::curve} to illustrate our {\bf PP} model.
In the figure, the x-axis denotes the distance of the two circles
and the y-axis denotes the value of the function.
Figure~\ref{fig::curve}(b) shows the curve of the first function
in our {\bf PP} model. The arrow also points to the location of
the minimal value in the curve, and it happens when the two
circles are placed with a long distance. To explain it, we use the
following equation to represent the general function:
\begin{equation}
   f(z)= cz + s\frac{(b-z)}{z} = cz + sbz^{-1} -s,
   \label{eq:convex}
\end{equation}
where z denotes $d_{ij}$, $c$ denotes $c_{ij}$, s denotes
$s_{ij}$, and $b$ denotes $r_i + r_j$. Then, the first derivative
of the function is shown in the following:
\begin{equation}
   f'(z)= c - sbz^{-2} = 0 \Rightarrow z = \pm \sqrt{\frac{sb}{c}}
   \label{eq:PP_loc}
\end{equation}
Thus, the minimum value can be computed by the above equation. By
the same condition in the above example ($r_{i}=30$, $r_{j}=20$,
and $c_{ij}=3$), the distance of two circles is 2449.5, which is a
long distance (see  Figure~\ref{fig::curve}(b)). However, we hope
the minimum value happens if the two circles connect at one point.
Therefore, only when
 $x$ is smaller $r_i + r_i$, the equation is taken. For the other part, we
use another monotonic increasing function similar to the first
equation to replace it (see the second equation in the
function~\ref{PP_model}). In this equation, its value increases
slowly when the distance is larger than $r_i + r_j$. The resulting
curve of {\bf PP} model is shown in Figure~\ref{fig::curve}(e) and
the smallest value of the curve happens at the point when the
distance of two circles equals to the summation of the two
radiuses (i.e., $50 = r_i + r_j =30+20$)

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/curve_mod.eps,width=15cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     Suppose $r_{i}=30$, $r_{j}=20$, and $c_{ij}=3$. (a) The curve of the first function in AR model (the minimum value occurs when the distance of two circles is 2.0205).
     (b) The curve of the first equation in our {\bf PP} model (the minimum value occurs when the distance of two circles is 2449.5).
     (c) The curve of equation 1 by increasing the vertical scale of (a).
     (d) The curve of equation 2 with the same scale (c).
     (e) The curve of {\bf PP} model that is obtained by combining the curves of equation 1 and equation 2 divided by the point $x = r_i + r_j$.
   }
  \label{fig::curve}
\end{figure}

The objective function $F$ in the global distribution stage is to
minimize the summation of the function $f_{ij}$ in PP model for
each pair of circles $C_i$ and $C_j$
 as follows:
 \begin{equation}
 \label{obj_pp}
 F = \min_{X_{i},Y_{i},X_j, Y_j} \sum_{1\leq i< j \leq n} f_{ij}(X_i,
 Y_i, X_j, Y_j).
\end{equation}


\subsection{Convex Property}
\label{subsec:convexpro}

In this subsection, we'll show that the objective function as
stated in the equation~\ref{obj_pp}  is a convex function. Before
that, we first show each equation in PP model is a convex
function.


\begin{lemma}
\label{Hessian} Let $f_{ij}: \Re^4 \mapsto \Re $ be given by
\begin{equation}
\label{pp_prove}
 f_{ij}(X_i,X_j,Y_i,Y_j)= c_{ij}d_{ij}+s_{ij}(b/d_{ij}-1),
\end{equation}
where $c_{ij}\geq 0$,  $d_{ij}=\sqrt{(X_i-X_j)^2+(Y_i-Y_j)^2}$,
and $b =r_i+r_j $. The Hessian of $f_{ij}$ is positive
semi-definite.

\end{lemma}

\begin{proof}
The 4-component column vector of the first derivative of $f_{ij}$
is as follows:
\[
\nabla{f_{ij}(X_i,X_j,Y_i,Y_j)} = \left(
\begin{array}{c}
\frac{\partial{f_{ij}}}{\partial{X_i}}  \\
\frac{\partial{f_{ij}}}{\partial{X_j}}  \\
\frac{\partial{f_{ij}}}{\partial{Y_i}}  \\
\frac{\partial{f_{ij}}}{\partial{Y_j}}   \end{array} \right) =
\left(
\begin{array}{c}
 c_{ij}(X_i-X_j)d_{ij}^{-1}-s_{ij}b(X_i-X_j)d_{ij}^{-3} \\
 -c_{ij}(X_i-X_j)d_{ij}^{-1}+s_{ij}b(X_i-X_j)d_{ij}^{-3}\\
 c_{ij}(Y_i-Y_j)d_{ij}^{-1}-s_{ij}b(Y_i-Y_j)d_{ij}^{-3}\\
 -c_{ij}(Y_i-Y_j)d_{ij}^{-1}+s_{ij}b(Y_i-Y_j)d_{ij}^{-3} \end{array} \right)
 \]

The Hessian of $f_{ij}$ is a $4\times4$ matrix, which is the
second derivative of $f_{ij}$ and each element in the $i$-th row
and $j$-th column is
$\frac{\partial{f_{ij}}}{\partial{X_i}{X_j}}$. We first list each
element in the following:
\begin{eqnarray*}\label{partial}
  \frac{\partial{f_{ij}}}{\partial{X_i}^2}= \frac{\partial{f_{ij}}}{\partial{X_j}^2}&=&
  c_{ij}d_{ij}^{-1}-(c_{ij}(X_i-X_j)^2+s_{ij}b)d_{ij}^{-3}\\
  & &+3s_{ij}b(X_i-X_j)^2d_{ij}^{-5}=A \nonumber\\
  \frac{\partial{f_{ij}}}{\partial{Y_i}^2}= \frac{\partial{f_{ij}}}{\partial{Y_j}^2}&=&
  c_{ij}d_{ij}^{-1}-(c_{ij}(Y_i-Y_j)^2+s_{ij}b)d_{ij}^{-3}\\
  & &+3s_{ij}b(Y_i-Y_j)^2d_{ij}^{-5}=B \nonumber\\
  \frac{\partial{f_{ij}}}{\partial{X_i}{X_j}}= \frac{\partial{f_{ij}}}{\partial{X_j}{X_i}}&=&
  -c_{ij}d_{ij}^{-1}+(c_{ij}(X_i-X_j)^2+s_{ij}b)d_{ij}^{-3}\\
  & &-3s_{ij}b(X_i-X_j)^2d_{ij}^{-5}=-A  \nonumber\\
  \frac{\partial{f_{ij}}}{\partial{Y_i}{Y_j}}= \frac{\partial{f_{ij}}}{\partial{Y_j}{Y_i}}&=&
  -c_{ij}d_{ij}^{-1}+(c_{ij}(Y_i-Y_j)^2+s_{ij}b)d_{ij}^{-3}\\
  & &-3s_{ij}b(Y_i-Y_j)^2d_{ij}^{-5}=-B \nonumber\\
  \frac{\partial{f_{ij}}}{\partial{X_i}{Y_i}}= \frac{\partial{f_{ij}}}{\partial{Y_i}{X_i}}&=&
  \frac{\partial{f_{ij}}}{\partial{X_j}{Y_j}}= \frac{\partial{f_{ij}}}{\partial{Y_j}{X_j}}=\\
  & &(X_i-X_j)(Y_i-Y_j)(-c_{ij}d_{ij}^{-3}+3s_{ij}bd_{ij}^{-5})=C \nonumber\\
  \frac{\partial{f_{ij}}}{\partial{X_j}{Y_i}}= \frac{\partial{f_{ij}}}{\partial{Y_i}{X_j}}&=&
  \frac{\partial{f_{ij}}}{\partial{X_i}{Y_j}}= \frac{\partial{f_{ij}}}{\partial{Y_j}{X_i}}=\\
  & &(X_i-X_j)(Y_i-Y_j)(c_{ij}d_{ij}^{-3}-3s_{ij}bd_{ij}^{-5})=-C \nonumber
%  \frac{\partial{f}}{\partial{Y_j}}= -c(Y_i-Y_j)d_{ij}^{-1}+sb(Y_i-Y_j)d_{ij}^{-3} \label{partialyj}
\end{eqnarray*}

Thus, the Hessian matrix of $f_{ij}$ is as follows:
\[
\nabla^2{f_{ij}(X_i,X_j,Y_i,Y_j)} = \left(
\begin{array}{cccc}
\frac{\partial{f_{ij}}}{\partial{X_i}^2}    & \frac{\partial{f_{ij}}}{\partial{X_j}{X_i}} & \frac{\partial{f_{ij}}}{\partial{Y_i}{X_i}} & \frac{\partial{f_{ij}}}{\partial{Y_j}{X_i}} \\
\frac{\partial{f_{ij}}}{\partial{X_i}{X_j}} & \frac{\partial{f_{ij}}}{\partial{X_j}^2}    & \frac{\partial{f_{ij}}}{\partial{Y_i}{X_j}} & \frac{\partial{f_{ij}}}{\partial{Y_j}{X_j}} \\
\frac{\partial{f_{ij}}}{\partial{X_i}{Y_i}} & \frac{\partial{f_{ij}}}{\partial{X_j}{Y_i}} & \frac{\partial{f_{ij}}}{\partial{Y_i}^2}    & \frac{\partial{f_{ij}}}{\partial{Y_j}{Y_i}} \\
\frac{\partial{f_{ij}}}{\partial{X_i}{Y_j}} & \frac{\partial{f_{ij}}}{\partial{x_j}{Y_j}} & \frac{\partial{f_{ij}}}{\partial{Y_i}{Y_j}} & \frac{\partial{f_{ij}}}{\partial{Y_j}^2}  \end{array} \right) =
\left(
\begin{array}{cccc}
 A  & -A &  C & -C \\
-A  &  A & -C &  C \\
 C  & -C &  B & -B \\
-C  &  C & -B &  B \end{array} \right)
 \]

 It is easy to show  that $\nabla^2{f_{ij}(X_i,X_j,Y_i,Y_j)} = 0$.

\end{proof}

\begin{corollary}
\label{convex} The piecewise function $f_{ij}:\Re^{4}\rightarrow
\Re$ in equation~\ref{pp_prove} is a convex function on an open
convex set $C \subset \Re^{4}$
\end{corollary}
\begin{proof}

We can say $f_{ij}$ is a convex function according to
Lemma~\ref{Hessian} and the well-known fact as
follows~\cite{Edwin}:

If $f:\Re^{n}\rightarrow \Re$ is twice continuously
differentiable, then $f$ is convex on an open convex set $C
\subset \Re^{n}$ if $\bigtriangledown^2f$ is positive semidefinite
for all points in $C$.
\end{proof}


We have shown $f_{ij}$ is a convex function. Now, we can derive
that PP model (see Function~\ref{eq:pp}) is a also a convex
function as follow:
\begin{corollary}
\label{PP} PP model is a convex function on an open convex set $C
\subset \Re^{4}$
\end{corollary}
\begin{proof}
PP model is composed of two functions:
$c_{ij}d_{ij}+p_{ij}/d_{ij}$ and
$c_{ij}d_{ij}+s_{ij}p_{ij}/d_{ij}$ and its value is the max value
of two functions. Since the two functions both are convex
functions (see Corollary~\ref{convex}), we can say PP model is a
convex function according to the following fact~\cite{Edwin}:

If $f:\Re^{n}\rightarrow \Re$ and $g:\Re^{n}\rightarrow \Re$ are
convex functions, then so is $h= max(f, g)$.

\end{proof}


% As shown in Figure~\ref{fig::conveX_curve}(a), suppose $f_1(d_{i,j})$ denotes
%the function $c_{ij}d_{ij}+p_{ij}/d_{ij}$ and $f_2(d_{i, j})$
%denotes the one $c_{ij}d_{ij}+s_{ij}p_{ij}/d_{ij}$. Since function
%is composed of max value of two functions, we can it is a convex
%function according to



 Finally, we can show the objective function $F$ is also a convex function.

\begin{theorem}
\label{Objective}
 Let $F: \Re^{2n(n-1)} \mapsto \Re $ be given by
 \begin{equation}
F= \sum_{1\leq i< j \leq n} f_{ij}(X_i,Y_i,X_j,Y_j)
\end{equation}
 is a convex function.
\end{theorem}
\begin{proof}

We have derived that $f_{ij}$ is a convex function by
Corollary~\ref{PP}. Since the objective function is a summation
for each pair of modules $m_i$ and $m_j$, we can say that the
objective function $F$ is a convex function according to the
following fact~\cite{Edwin}:

If $f:\Re^{n}\rightarrow \Re$ and $g:\Re^{n}\rightarrow \Re$ are
convex functions, then so is $h= (f+ g)$.

\end{proof}

% Because all piece functions shown in Figure
%~\ref{fig::conveX_curve}(b) are convex and Lemma 3 is introduced,
%$F(y)$ is a convex function.



%\begin{figure}[htb]
%  \centering
%  \centerline{\psfig{figure=figure/conveX_curve.eps,width=10cm}}
%     \vspace{-2mm}
%  \caption{
%     \footnotesize
%     (a) Two convex curves $f_1(x)$ and $f_2(x)$. We use two
%     maximum piece functions of $f_1(x)$ and $f_2(x)$ in the
%     boundary $r_i+r_j$.
%     (b) k piece functions $f_1(x)$,$f_2(x)$,...$f_k(x)$.
%   }
%  \label{fig::convex_curve}
%\end{figure}

\newpage

\setcounter{figure}{0}
\section{Local Legalization Stage}
\label{section::COP}

After the first stage, the circles that represent modules have
been uniformly distributed over a specified region and total
wirelength is minimized. Now, we have to determine the exact
locations and shapes of modules so that no two modules overlap and
the modules are placed inside the outline. Before that, in order
to keep the optimization results of the first stage, we first have
to extract the geometric relations between modules based on the
distribution of circles.


\subsection{Constraint Graph Construction}
\label{subsec:cg}

In this stage, we utilize the Delaunay Triangulation
(DT)~\cite{Jin06} method to get the necessary geometrical
relations between modules. Given a distribution of objects,
neighboring objects can be identified by an edge in a triangle
after applying the method. Then, the geometrical relation between
the neighboring objects can be determined according to their
relative positions. Finally, a horizontal constraint graph
(denoted by $C_h$) and a vertical constraint graph ($C_v$) can be
built with these relations.

First, we recover the shape of a module from a circle to a square,
and place it at the location with its center overlapping original
circle's center. Then, the Delaunay Triangulation (DT)
method~\cite{Jin06} is applied on the centers of the modules, and
a set of triangles are obtained, we call it a {\bf DT} graph. For
each triangle (denoted by $\triangle(n_i, n_j, n_k)$), each node
$n_i$ denotes a module $m_i$ and an edge ($n_i$, $n_j$) denotes
that $m_i$ and $m_j$ are in the neighboring locations. For each
pair of modules corresponding to an edge in a triangle, their
geometrical relation needs to be considered.


Now, we'd like to determine the geometrical relation between
modules $m_i$ and $m_j$ corresponding to each edge ($n_i$, $n_j$)
in the graph. Depending on whether the two modules overlap, we can
classify it into two cases as follows:
\begin{itemize}
\item  {\bf $m_i$ and $m_j$ separate:} The rectangle, denoted by
$R_{i,j}^s$, formed by the centers of the modules is taken. Let
$d_w$ and $d_h$ denote the width and height of the rectangle. If
$d_w>d_h$, $m_i$ and $m_j$ have horizontal relation (denote by
$m_i \vdash m_j$). Otherwise, $m_i$ and $m_j$ have vertical
relation (denote by $m_i \perp m_j$).

\item  {\bf $m_i$ and $m_j$ overlap:} The rectangle, denoted by
$R_{i,j}^o$, formed by the overlapped area is taken. Opposite of
the previous case, $m_i \perp m_j$ if $d_w > d_h$; otherwise, $m_i
\vdash m_j$.
\end{itemize}

An edge ($n_i$, $n_j$) is called the transitive edge ($n_i$,
$n_j$) if there exists a path between $n_i$ and $n_j$ except the
edge ($n_i$, $n_j$). In order to decrease the number of
constraints, the transitive edge ($n_i$, $n_j$) should not be
added during construction of constraint graphs. Such edge can be
eliminated easily during building constraint graphs. For each
triangle, we just need to ignore the edge with the longest length
if three edges have the same geometrical relation.

Figure~\ref{fig::con_gf} shows how to construct horizontal and
vertical constraint graphs from the result of the first stage. The
circles in Fig~\ref{fig::con_gf}(a) shows the initial distribution
of circles and the dotted line enclosing the circles are the
initial shapes of modules. After applying the Delaunay
Triangulation (DT) method on the centers of the circles, a set of
triangles is obtained as shown in Fig~\ref{fig::con_gf}(b). Note
that each neighboring modules are described by an edge in a
triangle. Therefore, the relations of modules corresponding to
each edge are extracted. See the edge ($n_1, n_{10}$) in the
triangle $\triangle(n_1, n_3, n_{10})$ for example. Since the
modules $m_{10}$ and $m_{1}$ overlap in the initial placement, we
determine their relation according to the rectangle, $R_{10,1}^o$,
formed by the overlap area of the two modules. Because $d_w < d_h$
and it is more efficient to separate them in horizontal direction,
the relation is denoted as $m_{10} \vdash m_{1}$. Besides, since
all the three edges in $\triangle(n_1, n_3, n_{10})$ have
horizontal geometrical relations, the longest edge ($n_{10}, n_3$)
can be ignored directly. In the other case, see an edge
($n_7$,$n_9$) in the triangle $\triangle(n_2, n_7, n_9$). Because
$m_7$ and $m_9$ do not overlap, we take the rectangle,$R_{7,
9}^s$, formed by the centers of $m_7$ and $m_9$ and consider $m_7
\perp m_9$ because $d_w < d_h$. The longest edge ($n_7$, $n_2$) is
also ignored because the three edges have vertical relations. The
resulting constraint graphs are shown in Fig~\ref{fig::con_gf}(d).

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/fig4-1.eps,width=13cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     (a) The distribution of circles after the global distribution stage.
     (b) The DT graph after applying Delaunay Triangulation
     method on the result shown in (a).
     (c) Rectangles between two circles.
     (d) Constraint Graphs.
   }
  \label{fig::con_gf}
\end{figure}

\subsection{QOPL :  Quadratic Optimization Programming for Legalization} \label{subsec: SCOP2}

Before introducing {\bf QOPL}, we need the following definitions:

\begin{itemize}

\item ({$x_i$, $y_i$}): ($x_i$,$y_i$) denotes the bottom-left
coordinate of a module $m_i$.

\item $w_i$ (or $h_i$): $w_i$ ($h_i$) represents the width
(height) of $m_i$.

\item {$N_s^{h}$} (or {$N_e^{h}$}): $N_s^{h}$ ({$N_e^{h}$})
denotes a set of nodes with zero in-degree (out-degree) in $C_h$.

\item {$N_s^{v}$} (or {$N_e^{v}$}): $N_s^{v}$ ({$N_e^{v}$})
denotes a set of node with zero in-degree (out-degree) in $C_v$.

\end{itemize}

Based on the constructed constraint graphs introduced the previous
subsection, we use a quadratic function to reshape modules so that
modules can be placed into a fixed-outline and no two modules
overlap as follows:


\begin{eqnarray}\label{object}
    \min \hspace{0.05cm}\{(W-W_{f})^2+  (H-H_{f})^2\}
    \label{obj}
\end{eqnarray}

s.t.
\begin{eqnarray}\label{constraints12}
  x_i+w_i \leq x_j, \hspace{1.1cm} \forall (n_i, n_j)\in C_h \label{hor_cont}\\
  y_i+h_i \leq y_j, \hspace{1.1cm} \forall (n_i, n_j)\in C_v  \label{ver_cont}\\
  x_s \geq 0, \hspace{2.1cm} \forall n_s \in N_s^h \label{her_0_cont}\\
  x_e +w_e \leq W \hspace{2.1cm} \forall n_e \in N_e^h \label{her_1_cont}\\
  y_s  \geq 0,\hspace{2.1cm} \forall n_s  \in N_s^v \label{ver_0_cont}\\
  y_e  + h_e  \leq H \hspace{2.1cm} \forall n_e \in N_e^v \label{ver_1_cont}
\end{eqnarray}

To satisfy the {\bf fixed-outline constraint}, the objective
function tries to minimize the square of the difference between
predefined width (height) and the resulting width (height) as
shown in the objective function in Equation~\ref{obj}.
Inequations~\ref{hor_cont} and~\ref{ver_cont} are {\bf non-overlap
constraints} for neighboring modules in horizontal and vertical
constraint graphs, respectively. Inequations~\ref{her_0_cont}\ to
\ref{ver_1_cont} are {\bf boundary constraints} that restrict all
boundary modules are placed inside the outline.
Inequation~\ref{her_0_cont} (\ref{her_1_cont}) makes modules in
the left (right) boundary whose $x$-coordinates larger (smaller)
than zero ($W$). Similarly, the $y$-coordinates of modules in the
bottom (top) boundary are larger (smaller) than zero ($H$) by
Inequations~\ref{ver_0_cont} (\ref{ver_1_cont}). Note that only
those modules in the boundary are constrained, then other modules
can be placed inside the boundary as well by the non-overlap
constraints. It greatly reduces the number of constraints.

Different from the representation based floorplanner that compact
modules toward bottom-left side, the analytical based approach can
spread modules uniformly among the placement region, which implies
better wirelength. Figure~\ref{fig::QOPLn30}(a) and(b) shows that
the moving of $b_1$ and $b_3$ from bottom-left packing and the
their HPWL(dash line) becomes less. The same moving of $b_2$ and
$b_3$ reduces their HPWL too. Then, it's quite obvious in
legalizing n30 with uniform white space( As shown in
Figure~\ref{fig::QOPLn30}(c)).




%The advantages of {\bf QOPL} are illustrated with
%Figure~\ref{fig::QOPLcom}. As shown in (a), {\bf QOPL} utilizes
%chip completely without overlaps. While {\bf QOPL} have to handle
%a floorplan with white space ( $\Gamma > 0$ ), the outline width
%($W_f^*$) and height ($H_f^*$) will be given as
%Equation~\ref{outline}. Because of the uniform global distribution
%and the constraints ( Inequation~\ref{her_1_cont} and
%~\ref{ver_1_cont} ), {\bf QOPL} is able to legalize all modules
%within outline and would not pack modules toward bottom-left
%corner. Comparison to bottom-left packing, {\bf QOPL} distributes
%white space uniformly in order to other purposes such as {\bf TSV}
%design in 3D IC or spreading spare cells in {\bf ECO}. To sum up
%the advantages, {\bf QOPL} could:

%\begin{enumerate}

%\item Legalize any white space floorplan.

%\item Distribute white space uniformly.

%\end{enumerate}


%\begin{eqnarray}\label{outline}
%   H_f^*=\sqrt{(1+\Gamma)}H_f, \hspace{1.1cm}
%   W_f^*=\sqrt{(1+\Gamma)}W_f, \label{outline}
%\end{eqnarray}

%\begin{figure}[htb]
%  \centering
%  \centerline{\psfig{figure=figure/QOPLcom.eps,width=12cm}}
%     \vspace{-2mm}
%  \caption{
%     \footnotesize
%     (a) $\Gamma = 0\%$ : QOPL utilizes chip completely without
%     overlaps.
%     (b) $\Gamma = 5\%$ : QOPL legalizes modules uniformly.
%   }
%  \label{fig::QOPLcom}
%\end{figure}

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/QOPLn30mod.eps,width=10cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     (a) Optimization of wirelength by redistributing modules.
     (b) QOPL legalizes n30 with uniform white space
     distribution. ($\Gamma = 10\%$)
   }
  \label{fig::QOPLn30}
\end{figure}


\subsection{Hierarchical UFO Flow}
\label{subsec:cg}

Note that we don't add the aspect ratio constraints in the above
formulation. Given constraint graphs and the aspect ratio
constraint, the fixed-outline floorplanning with zero dead space
may not be achieved.
%It highly depends on the initial floorplan.
However, if there exist larger dead space or modules can be
uniformly distributed to the placement region in the global
distribution stage, it has greater chance to achieve it. In
Figure~\ref{fig::5p-non} , we'll show that all modules can be
legalized after first applying QOPL in the case with 5\% dead
space (i.e., $\Gamma = 5\%$). However, some modules may violate
aspect ratio constraints in the zero dead space (i.e., $\Gamma =
0\%$) as shown in Figures~\ref{fig::n10to300}. In such condition,
we only have to redistribute the modules in a sub-region. Note
that even in such a condition, the number of violated modules does
not increase proportional to the size of modules in a circuit.
This also shows that our global distribution stage can actually
spread modules over the placement region uniformly.

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/n30n50violated.eps,width=15cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     (a) Initial floorplan of n30 after first QOPL.  (b) Resulting floorplan of n30 after
     hierarchical UFO is applied.
     (c) Initial floorplan of n50 after first QOPL.  (d) Resulting floorplan of n50 after
     hierarchical UFO is applied.
   }
  \label{fig::refinement}
\end{figure}


\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/n10to300-5.eps,width=15cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
      There exists no violated module violates the aspect ratio constraint after first applying QOPL ($\Gamma = 5\%$ ).
      (a) n10 (b) n30 (c) n50 (d) n100 (e) n200 (f) n300
   }
  \label{fig::5p-non}
\end{figure}

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/n10to300.eps,width=15cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     The number of modules that violate the aspect ratio constraint after first applying QOPL ($\Gamma = 0\%$ ).
     (a) 0 in n10;  (b) 3 in n30;  (c) 2 in n50;
     (d) 9 in n100; (e) 14 in n200; (f) 7 in n300;
   }
  \label{fig::n10to300}
\end{figure}


If there exist modules that violate the aspect ratio constraint
after first QOPL, we will divide the region quadratually and apply
{\bf PP} model to the region in which such modules exist. This
hierarchical procedure not only can repair the violations, but
also improve the results in wirelength. After these process, QOPL
is applied again to obtain a final floorplan. For example,
Figure~\ref{fig::refinement}(a) is an initial floorplan of n30
after first QOPL in the zero dead space fixed-outline floorplan.
There exist three modules violating the aspect ratio constraint.
We divide the region into four parts I, II, III, IV as labels in
the figure. Since the violated modules are in the regions III and
IV, we only need to apply {\bf PP} model to these regions. Then,
QOPL is applies again to obtain a legal floorplan as shown in
Figure~\ref{fig::refinement}(b).  Note that we almost do not
change the locations of modules in regions I and II.
Fig~\ref{fig::refinement}(c) and (d) shows another example for
n50.





\newpage
\setcounter{figure}{0}
\section{Floorplanning with Pre-Placed Modules }
\label{sec:PPM}

In the real design flow, there may exist several modules placed on
the fixed locations in a die. In order to get a feasible
floorplan, it is necessary to consider these blockages. In this
section, we would like to handle fixed-outline floorplanning with
pre-fixed modules.

UFO can be easily used to deal with pre-placed modules. Since the
coordinates of pre-placed modules have been determined, we only
need to directly assign the values to the centers of the
corresponding circles in the global distribution stage. Suppose
the bottom-left coordinate of a pre-placed module $m_r$ is
$(x_r,x_r)$ and $r$ = $0.5\sqrt{w_rh_r}$. The coordinate
$(X_r,Y_r)$ of the corresponding circle is ($x_r + r$, $y_r + r$).
If the circle is outside the outline in the $x$ ($y$) direction,
that is $X_r+r \geq W_f$ ($Y_r+r \geq H_f$), its $x$ ($y$)
coordinate should be adjusted as $X_r= W_f-r$ ($Y_r= H_f-r$). In
this way, the pre-placed modules can be fixed inside the outline,
and all circles except these circles can be moved arbitrarily.

Similar to other modules, we do not give aspect ratio constraints
for the pre-placed modules during QOPL. Therefore, they may
overlap with other modules when their shapes are recovered, and we
need to adjust the shapes of modules overlapped by them. For each
$\triangle$ associated with a pre-placed module $m_r$ in a {\bf
DT} graph, the module $m_i$ corresponding to a node in the
triangle are considered as a surrounding module. After these
modules are found, we can obtain a legal floorplan by reshaping
these modules as rectilinear modules using a horizontal or a
vertical cut line.

Figures~\ref{fig::reshape} shows our procedure for pre-placed
modules. Figure~\ref{fig::reshape}(a) shows the inial shapes of
modules after QOPL. The black module denotes a pre-placed module.
After the shape of the pre-placed module is recovered, it may
overlap with neighboring modules and release some space as shown
in Figure~\ref{fig::reshape}(b). We can get a feasible floorplan
by reshaping these modules by dividing the space horizontally as
shown in Figure~\ref{fig::reshape}(c).
Figure~\ref{fig::reshape}(d) shows another example when the shape
of pre-placed module is rectilinear. The shape of module is
recovered in Figure~\ref{fig::reshape}(e). Similar procedure can
be applied to it. The resulting floorplan is shown in
Figure~\ref{fig::reshape}(f).


\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/reshape-cutting.eps,width=9cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     Legalization of pre-placed modules. (a)Initial shapes of
     modules after QOPL (i.e., the black module denotes a pre-placed module.). (b) Recovering of the pre-placed
     module.(c) Resulting floorplan. (d)-(f) Another example with a rectilinear pre-placed module.
   }
  \label{fig::reshape}
\end{figure}


Figure~\ref{fig::preplace-flow} shows the UFO design flow with
pre-placed modules. First, all modules are transformed into
circles. If a design contains pre-placed modules, the locations of
corresponding circles are set directly. Then, circles representing
modules are globally distributed among a placement region
according to a {\bf PP} model except that of pre-placed modules.
For the resulting distribution, we perform QOPL to determine the
exact locations and shapes of modules. Then, we recover shapes of
pre-placed modules as well as modules violating the aspect ratio
constraint and repair them as the introduced procedure to obtain a
final floorplan.

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/overallflow-pre.eps,width=15cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     Overall Flow of {\bf UFO} with pre-placed modules.
   }
  \label{fig::preplace-flow}
\end{figure}

\thispagestyle{empty}
\newpage

\section{Experimental Results}
\label{sec:results}

We have implemented our UFO system in the C++ language on a 900
MHz SUN Blade-2500 workstation with 4 GB memory.  The experiments
are divided into two classes according to whether or not a chip
contains pre-placed modules. In all experiments, I/O pads were
fixed on the boundary of the chips for fair comparison with
previous methods. And the wirelength was estimated using using
half-perimeter wirelength (HPWL).


\subsection{Fixed-Outline Floorplanning with Zero Dead Space }
\label{subsec:exp}


We first compare UFO with all the best published results with
SAFFOA~\cite{He08}, Luo et al.~\cite{Luo08}, and ZDS
(PATOMA)~\cite{Jcong06}, which are state-of-art fixed-outline
floorplanners that can achieve zero dead space floorplanning using
soft modules\footnote{We do not compare with IMF~\cite{Chen05} and
Defer~\cite{Yan08} since their experiments were performed on hard
modules and their dead spaces were larger than zero}. The
experiments were taken on the circuits n10, n30, n50, n100, n200,
and n300 from the GSRC benchmarks. The aspect ratio constraint is
between 1/3 and 3. In columns 2-3 and 4-7 of
Table~\ref{table::hard-wire-timing}, we first show the results of
UFO with hierarchical flow and without hierarchical flow. No
module violates the aspect ratio constraint after hierarchical
flow while there exist a smaller number of modules violating it
without the flow as shown in columns 4 and 8, respectively.
However, the number does not increase proportional to the number
of modules in a circuit, which demonstrates that our global
distribution stage can actually distribute modules to the
placement region. Therefore, the optimization results in the first
stage can be maintained during the local legalization stage. This
is the major reason that UFO can obtain better results comparing
to previous works. Although the runtime is longer, hierarchical
UFO can further reduce wirelength by 6.18\% comparing to that
without the flow. Comparing to previous works, hierarchical UFO
can greatly reduce wirelength  by {\bf 11.92\%}, {\bf 21.46\%},
and {\bf 20.31\%} respect to SAFFOA~\cite{He08},
ZDS~\cite{Cong06}, Luo et al.~\cite{Luo08}.
%In comparison to {\bf
%SAFFOA}, our methodology isn't restricted to slicing relations.
Figure~\ref{fig::reshape-n10to300}(a) ((b)) shows the resulting
floorplan of {\bf UFO} for n300 (n200) with aspect ratio 1:1
(2:1).


\begin{table}
{\scriptsize
     \begin{center}
     \rotatebox{90}{
     \begin{tabular}{|c||c|c|c||c|c|c|c||c|c|c||c|c|c||c|c|c|} \hline \hline
     circuit&  \multicolumn{7}{|c||}{UFO}
            &  \multicolumn{3}{|c||}{SAFFOA~\cite{He08}}
            &  \multicolumn{3}{|c||}{ZDS (PATOMA)~\cite{Jcong06}} & \multicolumn{3}{|c|}{Luo et al.~\cite{Luo08}}\\\cline{2-8}
            &  \multicolumn{3}{|c||} {with hierarchical flow} &
            \multicolumn{4}{|c||}{without
            hierarchical flow} &  \multicolumn{3}{|c||}{}&  \multicolumn{3}{|c||}{} & \multicolumn{3}{|c|}{}\\\cline{2-17}
           &   &  & \# of & & & & \# of &  &  &   &  & &  &  &  &\\
           & Wire  & Time  & violated & Wire &  $\Delta$ & Time & violated & Wire & $\Delta$ & Time & Wire & $\Delta$ & Time & Wire & $\Delta$ & Time \\
           &(mm)   &(Sec)    &modules & (mm)  & (\%)& (Sec) &modules & (mm)  & (\%)& (Sec) & (mm)  & (\%)& (Sec) & (mm)  & (\%)& (Sec)   \\ \hline \hline
     n10           &45193   &3      &0 & 45193  &0.00  &3      &0     &46207   &2.24    &2     &52258   &15.63   &1  & -      & -     & - \\
     n30           &120110  &57     &0 &122540  &2.02  &25     &3     &138218  &15.08   &14    &156921  &30.65   & 1 &  -     &  -    & - \\
     n50           &143170  &107    &0 &161990  &13.15 &48     &2     &165366  &15.50   &39    &180115  &25.80   & 1 &  -     &  -    & - \\
     n100          &240430  &391    &0 &259440  &7.91  &178    &9     &262469  &9.17    &158   &283452  &17.89   &2  & 285070 & 18.57  & - \\
     n200          &385440  &1587   &0 &428900  &11.28 &847    &14    &480573  &24.68   &690   &505736  &31.21   &3  & 506070 & 31.30 & - \\
     n300          &526330  &3441   &0 &540700  &2.73  &1939   &7     &551720  &4.82    &1563  &566242  &7.58    &4  & 584640 & 11.08  &  \\ \hline\hline
     Avg.$\Delta$  & \multicolumn{3}{|c||}{1}              &  \multicolumn{4}{|c||}{6.18} &\multicolumn{3}{|c||}{11.92}     &\multicolumn{3}{|c||}{21.46} &\multicolumn{3}{|c|}{20.31} \\\hline
     \end{tabular}}
     \vspace{-2mm}
     \caption{
      \footnotesize
      Wirelength and runtime comparisons among ~\cite{Luo08}.
      }
    \label{table::hard-wire-timing}
    \end{center}
}
\end{table}


%The other superior property is that the topological relation
%wouldn't be changed to affect the wirelength optimized in first
%stage.
% Our method is superior to
%~cite{Feng04} with the simple L-shape and T-shape in the same
%5condition that the topological relation won't be changed.
%Besides, the number of reshaping modules is much less.
%The modules in Figs~\ref{fig::n10to300}
%with orange color denote those violating aspect ratio constraints
%in different circuits. It shows that the number is linear
%propotional to the number of modules in a circuit.
%and we only need simple arbitrary
%shapes(L, T, and Z-shape shown in fig~\ref{fig::reshape-n10to300})
%to compete the post refinement.

%Table~\ref{table::Table_Fix} shows the comparisons for UFO with
%others in the fixed-outline with 5\% and 10\% dead space. Note
%that UFO do not need to deform any module in this condition.



%As shown in fig~\ref{fig::preplaced}, we illustrate this process
%with n30 benchmark. It's quite obvious
%(fig~\ref{fig::preplaced}(a)) that these constraints: {\bf
%pre-placed modules, fine aspect ratio , fixed-outline and
%zero-deadspace constraints} couldn't exist at the same time.
%There's no floorplaner which could handle these demands nowadays.
%The global distribution process minimize wire length and {\bf
%QOPL} completes all constraints but aspect ratio and pre-placed
%ones(fig~\ref{fig::preplaced}(b)). The final thing has to do is
%reshape the pre-placed modules and violation
%ones(fig~\ref{fig::preplaced}(c)) with {\bf arbitrary shape
%modules}(T-shape or L-shape). The methodology is introduced as
%follows and shown in fig~\ref{fig::reshape}.

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/n200_n300result.eps,width=15cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     Fixed-outline floorplans with zero dead space in: (a) n300 (aspect ratio = 1:1)
     and (b)n200 (aspect ratio = 2:1)
   }
  \label{fig::reshape-n10to300}
\end{figure}


We also performed another experiments by changing the aspect
ratios of outlines as  1:1, 2:1, 3:1 and 4:1 respectively. We
compared UFO with SAFFOA~\cite{He08} and A-FP~\cite{Zhan06}. A-FP
is an analytical fixed-outline floorplanner. Different from UFO
and SAFFOA using zero dead space outlines, they performed their
experiments on outlines with 15\% dead space.
Table~\ref{table::ratio-comp} shows that UFO can outperform SAFFOA
and A-FP by more than 5\% and 20\%, respectively.

%Our floorplanner can get
%better results than them for for the following reasons: 1. Because
%A-FP uses a quadratic formula to calculate the wirelength, which
%could lead to a little divergence with Half Perimeter Wirelength.
%2. Moreover, another two penalty terms on the objective function
%will partly distract their attention on the WL optimization. 3.
%Experiments on A-FP are finished with 15\% deadspace while our
%method runs with 0\% deadspace.
%It means all the nets in our
%generated floorplans are restricted in a smaller outline, which is
%helpful to reduce the total wirelength.

\begin{table}
{\scriptsize
     \begin{center}
     \rotatebox{90}{
     \begin{tabular}{|c||c|c|c||c|c|c||c|c|c||c|c|c|} \hline \hline
     &\multicolumn{3}{|c||}{1:1} & \multicolumn{3}{|c||}{2:1} & \multicolumn{3}{|c||}{3:1} & \multicolumn{3}{|c|}{4:1} \\
     \cline{2-13}& \multicolumn{1}{|c|}{UFO}
          & \multicolumn{1}{|c||}{SAFFOA} &A-FP & \multicolumn{1}{|c|}{UFO}
          & \multicolumn{1}{|c||}{SAFFOA} &A-FP & \multicolumn{1}{|c|}{UFO}
          & \multicolumn{1}{|c||}{SAFFOA} &A-FP & \multicolumn{1}{|c|}{UFO}
          & \multicolumn{1}{|c|} {SAFFOA} &A-FP \\\cline{2-13}
      Circuit & Wire    &  Wire   & Wire   & Wire     &  Wire   & Wire & Wire   & Wire   & Wire & Wire   & Wire   & Wire  \\
              & (mm)    &  (mm)   & (mm)   &  (mm) &  (mm) & (mm)     & (mm) & (mm) & (mm)     & (mm) & (mm) & (mm)      \\ \hline \hline
     n100     &  259440 & 263200  & 291628     & 262700   &  281509 & 290158     & 294220   & 296229 & 298894     & 286630 & 310752 & 313060   \\
     n200     &  428900 & 480014  & 572145     & 465800   &  520802 & 565927     & 532500   & 536040 & 583282     & 560090 & 572506 & 608074   \\
     n300     &  540700 & 554240  & 702822     & 592600   &  615713 & 722527     & 613070   & 617554 & 793771     & 702890 & 714746 & 858346   \\
     ami33    &  50699  & 59431   & 74072      & 52252    &  62272  & 75168      & 55827    & 67364  & 75180      & 57207  & 74067  & 79525    \\
     ami49    &  671920 & 625541  & 799239     & 687611   &  641746 & 829888     & 699540   & 675540 & 880387     & 715415 & 698811 & 939049  \\  \hline\hline
     Avg.$\Delta$ & 1   & 5.25\%  & 28.17\%    & 1        &  7.07\% & 23.68\%    & 1        &3.86\%  & 20.22\%    & 1      & 7.89\% & 31.26\%       \\\hline
     \end{tabular}}
     \vspace{-2mm}
     \caption{
      \footnotesize
      Wirelength comparison on the outlines with different aspect ratios: 1:1, 2:1, 3:1, and 4:1.
      }
    \label{table::ratio-comp}
    \end{center}
}
\end{table}

%Table~\ref{table::MCNCt} shows the comparison with ~\cite{Luo08} ,
%~\cite{CLin06} and ~\cite{HItoga05} under zero dead space and
%fix-outline constraints. {\bf UFO} outperforms ~\cite{Luo08} and
%~\cite{CLin06} with analytical methods. Though our floorplaner
%results too much wirelength than ~\cite{HItoga05},
%~\cite{HItoga05} uses much time in running a graph based
%algorithm. Figure~\ref{fig::MCNCf} shows the packing of {\bf UFO}
%without overlaps.

%\begin{table*}
%{\scriptsize
%     \begin{center}
%     \begin{tabular}{|c||c|c|c||c|c|c||c|c|c||c|c|c|} \hline \hline
%     circuit&  \multicolumn{3}{|c||}{UFO}
%            &  \multicolumn{3}{|c||}{~\cite{Luo08}}
%            &  \multicolumn{3}{|c||}{~\cite{CLin06}}
%            &  \multicolumn{3}{|c|}{~\cite{HItoga05}}\\\cline{2-13}
%           & Wire   & Time  & violated  &  Wire  & $\Delta$ & Time   & Wire   & $\Delta$ & Time   & Wire   & $\Delta$ & Time \\
%           &(mm)    &(Sec)  & modules   & (mm)   & (\%)     & (Sec)  & (mm)   & (\%)     & (Sec)  & (mm)   & (\%)     & (Sec)   \\ \hline \hline
%     ami33 &47733   &13.88  &0          &50080   &4.92      &6.06    &49730   &4.18      & 268    & 42400  & -11.17   & 960        \\
%     ami49 &696720  &36.71  &0          &699000  &0.33      &9.96    &1161200 &66.67     & 155    & 562360 & -19.28   & 2804               \\
%     apte  &369040  &3.35   &0          &397000  &7.58      &1.03    &390030  &7.58      & 22     & 358900 & -2.75    & 46                 \\
%     xerox &409772  &3.2    &0          &411000  &0.30      &1.12    &398890  &2.66      & 23     & 367380 & -10.35   & 43                    \\
%     hp    &125920  &3.31   &0          &142000  &12.77     &1.29    &133990  &6.41      & 26     & 116300 & -7.64    & 71           \\ \hline\hline
%     Avg.$\Delta$  & \multicolumn{3}{|c||}{1}    &\multicolumn{3}{|c||}{5.18}     &\multicolumn{3}{|c||}{16.44} &\multicolumn{3}{|c|}{-10.24} \\\hline
%     \end{tabular}
%     \vspace{-2mm}
%     \caption{
%      \footnotesize
%      Wirelength and runtime comparisons on MCNC benchmarks.
%      }
%    \label{table::MCNCt}
%    \end{center}
%}
%\end{table*}

%\begin{figure}[htb]
%  \centering
%  \centerline{\psfig{figure=figure/MCNC.eps,width=10cm}}
%     \vspace{-2mm}
%  \caption{
%     \footnotesize
%     Fixed-outline floorplans with zero dead space in: (a) ami33
%     and (b)ami49.
%   }
%  \label{fig::MCNCf}
%\end{figure}

\subsection{Fixed-Outline Floorplanning with Pre-placed Modules}
\label{subsec:exp}

We also used UFO to handle fixed-outline floorplanning with
pre-placed modules and the results are shown in
Table~\ref{table::pre-placed}. We generated the circuits from GSRC
circuits by randomly picking some modules and placing them in the
arbitrary locations in a fixed-outline. The experiments were
performed on outlines with different dead spaces 0\%, 5\%, and
10\%, and the wirelength and runtime for each condition are shown
in Table~\ref{table::pre-placed}.
%The number of pre-placed modules for each circuit is shown
%in Column 2.
Note that the wirelength increases when the dead space is larger
since the modules are not compacted in such condition. %that there exist about 3.28\% variation in wire
%length when some modules are pre-placed in the edge of a chip.
Fig~\ref{fig::pre-n100200} shows the fixed-outline floorplans with
pre-placed modules for n100 and n200 with zero dead space. The
pre-placed modules are denoted by the red color and their neighbor
modules are reshaped. Comparing to the zero dead space floorplan
that may reshape some modules with pre-placed modules, {\bf UFO}
could accomplish floorplanning with rectangular modules while the
dead space is greater than 5\%. Figure~\ref{fig::pre-n300} shows
the experimental results of n100 and n300 with $10\%$ dead space.
Note that all modules are rectangular in the figures.
Figure~\ref{fig::pre-n300-2} shows that {\bf UFO} could handle the
condition that some modules do not abut to boundaries.
%and hard modules could be handled by freeing the fixed coordinates
%and obtaining the processes (c) to (d) in the flow of
%Figure~\ref{fig::preplace-flow}.

%Without considering zero-deadspace and pre-placed constraints,
%{\bf UFO} can handle a floorplan which modules' are all in the
%range of aspect ratio while the criterion of dead space is over
%5\%.(as Shown in fig~\ref{fig::5p-non} and
%table~\ref{table::ds-comp})The number of violation modules caused
%by pre-placed modules (as shown in
%table~\ref{table::reshape})would be less and less by increasing
%dead space.

\begin{table}
{\scriptsize
     \begin{center}
     %\rotatebox{90}{
     \begin{tabular}{|c||c|c|c||c|c|c||c|c|c|} \hline \hline
     circuit&  \multicolumn{3}{|c||}{0\%}
            &  \multicolumn{3}{|c||}{5\%}
            &  \multicolumn{3}{|c|}{10\%}\\\cline{2-10}
           & \# of  & Wire   & Time   & \# of    &  Wire  & Time   & \# of    & Wire   & Time   \\
           & PPM    &(mm)    & (Sec)  & PPM      & (mm)   & (Sec)  & PPM      & (mm)   & (Sec)  \\ \hline \hline
     n10   &1       &45701   &3       &1         &43533   &3       &1         &41089   & 3    \\
     n30   &2       &117430  &22      &3         &127660  &20      &3         &123370  & 21    \\
     n50   &3       &154510  &42      &5         &163040  &39      &5         &164300  & 39     \\
     n100  &5       &243080  &164     &10        &248270  &138     &10        &259430  & 136     \\
     n200  &5       &399510  &815     &15        &417110  &737     &15        &472680  & 725     \\
     n300  &5       &554380  &1841    &20        &585030  &1522    &20        &598520  & 1539    \\ \hline\hline
     %Avg.$\Delta$  & \multicolumn{3}{|c||}{1}    &\multicolumn{3}{|c||}{5.18}     &\multicolumn{3}{|c||}{16.44} &\multicolumn{3}{|c|}{-10.24} \\\hline
     \end{tabular}
     \hspace{-2mm}
     \caption{
      \footnotesize
      Wirelength and runtime comparisons with pre-placed modules (PPM denotes Pre-Placed Modules).
      }
    \label{table::pre-placed}
    \end{center}
}
\end{table}

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/n100n200preplaced.eps,width=11.5cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     Fixed-outline floorplans with pre-placed modules:
     (a) n100(\# of PPM is 5, HPWL: 243080mm).
     (b) n200(\# of PPM is 5, HPWL: 399510mm).
   }
  \label{fig::pre-n100200}
\end{figure}

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/QOPLn300exp.eps,width=12cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     Fixed-outline floorplans with pre-placed modules with 10\%
     dead space.
     (a)n100(\# of PPM is 10, HPWL: 259430mm).
     (b)n300(\# of PPM is 20, HPWL: 598520mm).
   }
  \label{fig::pre-n300}
\end{figure}

\begin{figure}[htb]
  \centering
  \centerline{\psfig{figure=figure/QOPLn300exp2.eps,width=13cm}}
     \vspace{-2mm}
  \caption{
     \footnotesize
     Fixed-outline floorplans with pre-placed modules with 10\%
     dead space.
     (a)n100(\# of PPM is 10, HPWL: 256520mm).
     (b)n300(\# of PPM is 12, HPWL: 599310mm).
   }
  \label{fig::pre-n300-2}
\end{figure}




%\subsection{Flloorplanning with Pre-placed modules}
%\label{\exp1}



\thispagestyle{empty}
\newpage

\vspace*{-5mm}
\section{Conclusion}
\label{sec:conclusion}

We have proposed an analytical based approach, name {\bf UFO},for
the fixed-outline floorplanning. The method not only can achieve
zero dead space floorplanning, but also can handle pre-placed
modules. Experimental results on the GSRC and MCNC benchmarks have
demonstrated that our methodology outperforms the results reported
in the literature. Beside, we have shown the results of {\bf UFO}
on fixed-outline floorplanning with pre-placed modules.
%In the future, we is
%going to apply {\bf UFO} on 3D-IC floorplan by modifying one axis
%constraints on {\bf PP} model and {\bf QOPL}.

\thispagestyle{empty}


\vspace*{-5mm}


\baselineskip=24pt \footnotesize
%\scriptsize

\newpage

\begin{thebibliography}{200}



\bibitem{Adya03}
S. N. Adya and I. L. Markov. ``Fixed-outline floorplanning:
enabling hierarchical design.'' {\it IEEE TVLSI}, Vol.11, No.6,
pages 1120-1135, 2003.
%Trans. on Very Large Scale
%Integration (VLSI) Systems, Vol.11, No.6, pp. 1120-1135, 2003.

\bibitem{Adya04}
S. N. Adya, S. Chaturvedi, J. A. Roy, D. A. Papa and I. L. Markov.
``Unification of partitioning, placement and floorplanning.'' {\it
In Proc. of ICCAD}, pages 550-557, 2004.
%Intl. Conf. on Computer-Aided Design, pp. 550-557, 2004.

\bibitem{Anjos06}
M. F. Anjos and A. Vannelli. ``A new mathematical-programming
framework for facility-layout design.'' INFORMS Journal on
Computing, Vol.18, No.1, pages 111-118, 2006.

\bibitem{Chang00}
Y.-C. Chang, Y.-W. Chang, G.-M. Wu, and S.-W. Wu. ``B*-trees: A
new representation for non-slicing floorplans.'' {\it In Proc. of
DAC}, pages 458-463, 2000.
%{\it Proc. DAC}, pp.458--463, June 2000.


\bibitem{Chen05}
T.-C. Chen, Y.-W. Chang and S.-C. Lin. ``IMF: interconnect-driven
multilevel floorplanning for large-scale building-module
designs.'' {\it In Proc. of ICCAD}, pages 159-164, 2005.


\bibitem{Chen06}
T. Chen and Y. W. Chang. ``Modern foorplanning based on B*-tree
and fast simulated annealing.'' {\it IEEE TCAD}, Vol. 25, No. 4,
pages 637-650, 2006.
%IEEE Trans. on CAD, 25(4): 637-650, 2006.


\bibitem{Chen07}
S. Chen and T. Yoshimura. ``A stable fixed-Outline floorplanning
method.'' {\it In Proc. ISPD}, pages 119-126, 2007.

\bibitem{Edwin}
Edwin K. P. Chong and Stanislaw H. ZAK. ``An Introduction to
Optimization.'' New York: Wiley, second ed.,2001.

\bibitem{Jcong06}
J. Cong, M. Romesis, and J. Shinnerl. ``Fast floorplanning by look
ahead enabled recursive bipartitioning.'' {\it IEEE TCAD.}, Vol.
25, No. 9, pages 1719-1732, Sep. 2006.

\bibitem{Cong06}
J. Cong, G. Nataneli, M. Romesis, and J. Shinnerl. ``An
area-optimality study of floorplanning.'' {\it In Proc. of ISPD},
pages 78-83, 2004.

\bibitem{Feng03}
Yan Feng, Dinesh P. Mehta , Hannah Yang. ``Constrained modern
floorplanning.'' {\it In Proc. of ISPD}, pages 128-135, 2003.

\bibitem{Feng04}
Yan Feng and Dinesh P. Mehta. ``Constrained floorplanning using
network flows.'' {\it IEEE TCAD}, Vol. 23, No.4, APRIL 2004.
%IEEE Trans on Computer Aided Design. VOL. 23, NO.4, APRIL 2004.


\bibitem{Guo99}
P.-N. Guo, C.-K. Cheng, and T. Yoshimura. ``An O-Tree
representation of non-slicing floorplan and its applications.''
{\it In Proc. of DAC}, pages 268--273, 1999.

\bibitem{He08}
O. He, S. Dong, J. Bian, S. Goto, C.-K. Chen. ``A novel
fixed-outlined floorplanner with zero dead space for hierarcical
design.'' {\it In Proc. of ICCAD}, pages 16--23, 2008.

\bibitem{Hong00}
%X. Hong, et al.,
X. Hong, G. Huang, Y. Cai, J. Gu, S. Dong, C.-K. Cheng, and J. Gu.
``Corner Block List: An effective and efficient topological
representation of non-slicing floorplan.'' {\it In Proc. of
ICCAD}, pages 8-12, 2000.

\bibitem{HItoga05}
H. Itoga, C. Kodama and K. Fujuyoshi. ``A Graph Based Soft Module
Handling in Floorplan.'' {\it IEICE Trans. on Fundamentals of
Electronics, Communications and Computer Sciences}, Vol.E88-A
No.12, pages 3390--3397, 2005.

\bibitem{Jin06} L. Jin, D. Kim, L. Mu, D.-S. Kim and S.-M. Hu. ``A
sweepline algorithm for Euclidean Voronoi diagram of circules.''
{\it IEEE TCAD}, Vol. 38, pages 260-272, 2006.

\bibitem{Kahng00}
A. B. Kahng. ``Classical floorplanning harmful?'' {\it In Proc. of
ISPD}, pages 207-213, 2000.

\bibitem{Kirk83}
S. Kirkpatrick, C. D. Gelatt, and M. P. Vecchi. ``Optimization by
simulated annealing.'' {\it Science}, vol. 220, no. 4598, pages
671--680, 1983.

\bibitem{Lin04}
C. Lin, D. Chen and Y. Wang. ``Robust fixed-outline foorplanning
through evolutionary search.'' {\it In Proc. of ASP-DAC}, pages
42-44, 2004.

\bibitem{Lin01}
J.-M Lin and Y.-W Chang. ``TCG: A transitive closure graph-based
representation for non-slicing floorplans.'' {\it In Proc. of
DAC}, pages 764-769, 2001.


\bibitem{Luo08}
Chaomin Luo, Miguel F. Anjos, Anthony Vannelli. ``Large-scale
fixed-outline floorplanning design using convex optimization
Techniques.'' {\it In Proc. of ASP-DAC}, pages 198-203, 2008.

\bibitem{Liu05}
R. Liu, S. Dong, X. Hong and Y. Kajitani. ``Fixed-outline
foorplanning with constraints through instance augmentation.''
{\it In Proc. of ISCAS}, pages 1883-1886, 2005

\bibitem{CLin06}
C. Lin, H. Zhou and C. C. N. Chu. ``A Revisit to Floorplan
Optimization by Lagrangian Relaxation.'' {\it In Proc. of ICCAD},
pages 164--171, 2006.

\bibitem{Murata95}
H. Murata, K. Fujiyoshi, S. Nakatake, and Y. Kajitani.
``Rectangle-packing based module placement.'' {\it In Proc. of
ICCAD}, pages 472-479, Nov, 1995.

\bibitem{Moh96}
T.-S. Moh, T.-S. Chang and S. L. Hakimi. ``Globally optimal
floorplanning for a layout problem.'' {\it IEEE TCS}, Vol.43,
No.9, pages 713-720, 1996.

\bibitem{Nakatake96}
S. Nakatake, K. Fujiyoshi, H. Murata, and Y. Kajitani. ``Module
placement on BSG-structure and IC layout applications.'' {\it In
Proc. of ICCAD}, pages 484-491, 1996.


\bibitem{Otten82}
R.H.J.M. Otten. ``Automatic floorplan design.'' {\it In Proc. of
DAC}, pages 261-267, June 1982.


\bibitem{Wong86}
D. F. Wong, and C.-L. Liu. ``A new algorithm for floorplan
design.'' {\it In Proc. of DAC}, pages 101-107, June 1986.


\bibitem{Yan08}
Jackey Z. Yan and Chris Chu. ``DeFer: Deferred decision making
enabled fixed-outline floorplanner.'' {\it In Proc. of DAC}, pages
161-166, June 2008.


\bibitem{Zhou04}
H. Zhou and J. Wang., ``Acg. adjacent constraint graph for general
foorplans,'' {\it In Proc. of ICCD}, pp. 572--575, 2004.

\bibitem{Zhan06}
Y. Zhan, Y. Feng and S. Sapatnekar. ``A fixed-die floorplanning
algorithm using an analytical approach.'' {\it In Proc. of
ASP-DAC}, pages 771--776, 2006.







\end{thebibliography}

\thispagestyle{empty}

\end{document}
